@model PaginatedList<DiaryEntry>

@{
    ViewData["Title"] = "Diary Entries";
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<div class="container">
    <div class="row pt-4">
        <div class="col-4">
            <a asp-action="Create" asp-controller="Home" class="btn btn-success">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-journal-plus" viewBox="0 0 16 16">
                    <path fill-rule="evenodd" d="M8 5.5a.5.5 0 0 1 .5.5v1.5H10a.5.5 0 0 1 0 1H8.5V10a.5.5 0 0 1-1 0V8.5H6a.5.5 0 0 1 0-1h1.5V6a.5.5 0 0 1 .5-.5"/>
                    <path d="M3 0h10a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2v-1h1v1a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v1H1V2a2 2 0 0 1 2-2"/>
                    <path d="M1 5v-.5a.5.5 0 0 1 1 0V5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1zm0 3v-.5a.5.5 0 0 1 1 0V8h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1zm0 3v-.5a.5.5 0 0 1 1 0v.5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1z"/>
                </svg>
                Create a new entry
            </a>
        </div>
        <div class="col-4 text-start">
            <h2>Diary Entries</h2>
        </div>
        <div class="col-4 pt-2">
            <form asp-action="Index" method="get">
                <div class="form-actions no-color">
                    <p>
                        <label>Filter: <input type="text" name="search" value="@ViewData["AppliedFilter"]"/></label>
                        <input type="submit" value="Search" class="btn btn-info btn-sm"/>
                        <a asp-action="Index" asp-route-sort="@ViewData["SortOrder"]" class="btn btn-sm btn-dark">Reset</a>
                    </p>
                </div>
            </form>
        </div>
    </div>
</div>

@if (Model.Count > 0)
{
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            
            @await Html.PartialAsync("_TableHeader", ViewData)
            
            <tbody class="table-group-divider">
            
            @foreach (var entry in Model)
            {
                @await Html.PartialAsync("_TableEntry", model: entry)
            }
    
            </tbody>
        </table>
    </div>
    
    <a asp-action="Index"
        asp-route-sort="@ViewData["SortOrder"]"
        asp-route-page="@(Model.PageIndex - 1)"
        asp-route-search="@ViewData["AppliedFilter"]"
        class="btn btn-outline-info @prevDisabled">
        Previous
    </a>
    
    <a asp-action="Index"
        asp-route-sort="@ViewData["SortOrder"]"
        asp-route-page="@(Model.PageIndex + 1)"
        asp-route-search="@ViewData["AppliedFilter"]"
        class="btn btn-outline-info @nextDisabled">
        Next
    </a>
    
}
else
{
    <h3 class="pt-4 mt-4 text-center">No content</h3>
}